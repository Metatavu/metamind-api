timeout: 7200s
options:
  machineType: N1_HIGHCPU_32
steps:
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git submodule init
        git submodule update
  - name: 'openjdk:11.0.10-jdk'
    entrypoint: 'bash'
    args: 
    - '-c'
    - ./gradlew clean build -x test
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    timeout: 7200s
    env:
      - "DEBIAN_FRONTEND=noninteractive"
    args:
      - '-c'
      - |
        if [ -n "${_DEPLOYMENT}" ]; then
          if [ -n "${_NATIVE}" ]; then
            apt update && apt install -y wget &&
            wget -c https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${_GRAAL_VM_VERSION}/graalvm-ce-java11-linux-amd64-${_GRAAL_VM_VERSION}.tar.gz -O - | tar -xz &&
            mv graalvm-ce-java11-${_GRAAL_VM_VERSION} /tmp/graalvm &&
            export PATH=/tmp/graalvm/bin:$$PATH &&
            export JAVA_HOME=/tmp/graalvm &&
            java -version &&
            gu install native-image &&
            ./gradlew build -Dquarkus.package.type=native -Dquarkus.native.container-build=true -x test
          else
            docker build -f src/main/docker/Dockerfile.jvm -t ${_DOCKER_REPO_URL}:$(echo ${BUILD_ID} | cut -b 1-8) .
          fi
        fi
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    env:
      - "DEBIAN_FRONTEND=noninteractive"
      - "AWS_ACCESS_KEY_ID=${_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${_AWS_SECRET_ACCESS_KEY}"
      - "AWS_DEFAULT_REGION=${_AWS_DEFAULT_REGION}"
    args: 
    - '-c'
    - |
      if [ -n "${_DEPLOYMENT}" ]; then
        apt update && apt install -y unzip python &&
        curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip" &&
        unzip awscli-bundle.zip &&
        ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws &&
        aws ecr get-login-password | docker login --username AWS --password-stdin ${_DOCKER_REPO_URL}
        docker push ${_DOCKER_REPO_URL}:$(echo ${BUILD_ID} | cut -b 1-8)
      fi
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    env:
      - "AWS_ACCESS_KEY_ID=${_AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${_AWS_SECRET_ACCESS_KEY}"
      - "AWS_DEFAULT_REGION=${_AWS_DEFAULT_REGION}"
    args:
    - '-c'
    - |
      if [ -n "${_DEPLOYMENT}" ]; then
        ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws &&
        aws eks update-kubeconfig --name ${_CLUSTER} --region=${_AWS_DEFAULT_REGION} &&
        kubectl -n ${_NAMESPACE} set image deployment/${_DEPLOYMENT} ${_DEPLOYMENT}=${_DOCKER_REPO_URL}:$(echo ${BUILD_ID} | cut -b 1-8)
      fi
  - name: 'openjdk:11.0.10-jdk'
    entrypoint: 'bash'
    timeout: 1200s
    args:
      - '-c'
      - |
        if [ -n "${_TEST}" ]; then
          ./gradlew test
        fi
